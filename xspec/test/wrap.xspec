<?xml version="1.0" encoding="UTF-8"?>
<t:description xmlns:items="x-urn:test:xspec-items"
               xmlns:local="urn:x-xspec:common:wrap:local"
               xmlns:t="http://www.jenitennison.com/xslt/xspec"
               stylesheet="items.xsl">

   <!--
       Test the source file wrap.xsl.

       The test target (../src/common/wrap.xsl) is included implicitly by the XSpec compiler. You
       don't need to specify it in /t:description/@stylesheet. If you specify it explicitly, you'll
       get a warning: "Stylesheet module ../src/common/wrap.xsl is included or imported more than
       once."
   -->

   <!--
       Function t:wrappable-sequence
   -->
   <t:scenario label="t:wrappable-sequence">
      <!-- TODO: These scenarios do not run on XQuery
           t:wrappable-sequence() has not been implemented for XQuery -->

      <t:call function="t:wrappable-sequence" />

      <t:scenario label="All kinds of nodes">
         <t:call>
            <t:param select="$items:all-nodes" />
         </t:call>
         <t:expect label="False" select="false()" />
      </t:scenario>

      <t:scenario label="All nodes that can be wrapped">
         <t:call>
            <t:param select="$items:wrappable-nodes" />
         </t:call>
         <t:expect label="True" select="true()" />
      </t:scenario>

      <t:scenario label="All nodes that can be wrapped, and atomic value">
         <t:call>
            <t:param select="$items:wrappable-nodes, $items:integer" />
         </t:call>
         <t:expect label="False" select="false()" />
      </t:scenario>

      <t:scenario label="Nodes that cannot be wrapped">
         <t:call>
            <t:param select="$items:non-wrappable-nodes" />
         </t:call>
         <t:expect label="False" select="false()" />
      </t:scenario>

      <t:scenario label="Empty sequence">
         <t:call>
            <t:param as="empty-sequence()" />
         </t:call>
         <t:expect label="True" select="true()" />
      </t:scenario>

   </t:scenario>

   <!--
       Function local:wrappable-node
   -->
   <t:scenario label="t:wrappable-node">
      <!-- TODO: These scenarios do not run on XQuery
           local:wrappable-node() has not been implemented for XQuery -->

      <t:call function="local:wrappable-node" />

      <t:scenario label="Nodes">

         <t:scenario label="Attribute">
            <t:call>
               <t:param select="$items:attribute" />
            </t:call>
            <t:expect label="False" select="false()" />
         </t:scenario>

         <t:scenario label="Comment">
            <t:call>
               <t:param select="$items:comment" />
            </t:call>
            <t:expect label="True" select="true()" />
         </t:scenario>

         <t:scenario label="Document">
            <t:call>
               <t:param select="$items:document" />
            </t:call>
            <t:expect label="True" select="true()" />
         </t:scenario>

         <t:scenario label="Element">
            <t:call>
               <t:param select="$items:element" />
            </t:call>
            <t:expect label="True" select="true()" />
         </t:scenario>

         <t:scenario label="Namespace">
            <t:call>
               <t:param select="$items:namespace" />
            </t:call>
            <t:expect label="False" select="false()" />
         </t:scenario>

         <t:scenario label="Processing instruction">
            <t:call>
               <t:param select="$items:processing-instruction" />
            </t:call>
            <t:expect label="True" select="true()" />
         </t:scenario>

         <t:scenario label="Text">
            <t:call>
               <t:param select="$items:text" />
            </t:call>
            <t:expect label="True" select="true()" />
         </t:scenario>

      </t:scenario>

      <t:scenario label="Value">
         <t:call>
            <t:param select="$items:integer" />
         </t:call>
         <t:expect label="False" select="false()" />
      </t:scenario>

   </t:scenario>

   <!--
       Function t:wrap-nodes
   -->
   <t:scenario label="t:wrap-nodes">
      <!-- TODO: These scenarios do not run on XQuery
           t:wrap-nodes() has not been implemented for XQuery -->

      <t:call function="t:wrap-nodes" />

      <t:scenario label="All nodes that can be wrapped">
         <t:call>
            <t:param select="$items:wrappable-nodes" />
         </t:call>
         <t:expect label="Result is document node" test="$t:result instance of document-node()" />
         <t:expect label="Only one instance" test="count($t:result)" select="1" />
         <t:expect label="Wraps all nodes while unwrapping document node"
            test="$t:result/node()" select="for $node in $items:wrappable-nodes
               return (if ($node instance of document-node())
                       then $node/node()
                       else $node)" />
      </t:scenario>

      <t:scenario label="Empty sequence">
         <t:call>
            <t:param as="empty-sequence()" />
         </t:call>
         <t:expect label="Result is document node" test="$t:result instance of document-node()" />
         <t:expect label="Only one instance" test="count($t:result)" select="1" />
         <t:expect label="No child node" test="empty($t:result/node())" />
      </t:scenario>

      <!-- Scenarios for schema-aware processor are in issue-47.xspec -->
   </t:scenario>

</t:description>
