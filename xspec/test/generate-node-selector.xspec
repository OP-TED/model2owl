<?xml version="1.0" encoding="UTF-8"?>
<x:description stylesheet="../src/schematron/generate-node-selector.xsl"
	xmlns:myv="x-urn:test:generate-node-selector:variable"
	xmlns:x="http://www.jenitennison.com/xslt/xspec" xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

	<x:variable as="xs:string" name="myv:xpath-expression" select="'/xpath/to/my/target/node'" />

	<x:scenario label="Expect stylesheet" shared="yes">
		<!-- Expected stylesheet.
			Since XSpec ignores in-scope namespace nodes when comparing elements, namespace nodes
			should be tested separately. -->
		<x:expect label="Generated" select="/">
			<xsl:stylesheet exclude-result-prefixes="#all" version="3.0">
				<xsl:mode on-multiple-match="fail" on-no-match="fail" />
				<xsl:template as="node()?" match="attribute() | document-node() | node()">
					<xsl:sequence select="{$myv:xpath-expression}" version="3" />
				</xsl:template>
			</xsl:stylesheet>
		</x:expect>
	</x:scenario>

	<x:scenario label="Without namespace nodes">
		<x:call template="xsl:initial-template">
			<x:param name="expression" select="$myv:xpath-expression" />
			<x:param name="xslt-version" select="3.0" />
		</x:call>
		<x:like label="Expect stylesheet" />
		<x:expect label="xsl:sequence has no extra namespaces" select="()"
			test="x:copy-of-namespaces(descendant::xsl:sequence)[not(name() = ('xml', 'xsl'))]" />
	</x:scenario>

	<x:scenario label="With namespace nodes">
		<x:variable as="namespace-node()" name="myv:namespace-node" select="e/namespace::my-prefix">
			<e xmlns:my-prefix="my-uri" />
		</x:variable>
		<x:call template="xsl:initial-template">
			<x:param name="expression" select="$myv:xpath-expression" />
			<x:param name="namespace-nodes" select="$myv:namespace-node" />
			<x:param name="xslt-version" select="3.0" />
		</x:call>
		<x:like label="Expect stylesheet" />
		<x:expect label="xsl:sequence has only the given namespace" select="$myv:namespace-node"
			test="x:copy-of-namespaces(descendant::xsl:sequence)[not(name() = ('xml', 'xsl'))]" />
	</x:scenario>

</x:description>
