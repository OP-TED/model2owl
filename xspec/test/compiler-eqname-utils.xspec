<?xml version="1.0" encoding="UTF-8"?>
<x:description stylesheet="../src/compiler/base/util/compiler-eqname-utils.xsl"
	xmlns:local="urn:x-xspec:compiler:base:util:compiler-eqname-utils:local"
	xmlns:x="http://www.jenitennison.com/xslt/xspec" xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<x:helper stylesheet="test-utils.xsl" />

	<x:scenario label="Scenario for testing function resolve-EQName-ignoring-default-ns">
		<x:scenario label="URIQualifiedName">
			<x:scenario label="With URI">
				<x:variable as="xs:anyURI" name="ridiculous-uri"
					>'">&lt;#,|%7D&#x20;%7B][$^</x:variable>
				<x:variable as="xs:string" name="local-name" select="'foo'" />
				<x:call function="x:resolve-EQName-ignoring-default-ns">
					<x:param select="x:UQName($ridiculous-uri, 'foo')" />
					<x:param>
						<e xmlns="default-ns" />
					</x:param>
				</x:call>
				<x:expect label="Resolved without being affected by the default namespace"
					test="x:QName-exactly-equal($x:result, QName($ridiculous-uri, 'foo'))" />
			</x:scenario>

			<x:scenario label="Without URI">
				<x:call function="x:resolve-EQName-ignoring-default-ns">
					<x:param select="'Q{}foo'" />
					<x:param>
						<e xmlns="default-ns" />
					</x:param>
				</x:call>
				<x:expect
					label="Resolved as no namespace without being affected by the default namespace"
					test="x:QName-exactly-equal($x:result, QName('', 'foo'))" />
			</x:scenario>
		</x:scenario>

		<x:scenario label="Lexical QName">
			<x:scenario label="With prefix">
				<x:call function="x:resolve-EQName-ignoring-default-ns">
					<x:param select="'prefix:foo'" />
					<x:param>
						<e xmlns:prefix="prefixed-ns" />
					</x:param>
				</x:call>
				<x:expect label="Resolved"
					test="x:QName-exactly-equal($x:result, QName('prefixed-ns', 'prefix:foo'))" />
			</x:scenario>

			<x:scenario label="Without prefix">
				<x:scenario label="With default namespace">
					<x:call function="x:resolve-EQName-ignoring-default-ns">
						<x:param select="'foo'" />
						<x:param>
							<e xmlns="default-ns" />
						</x:param>
					</x:call>
					<x:expect label="Resolved without using the default namespace"
						test="x:QName-exactly-equal($x:result, QName('', 'foo'))" />
				</x:scenario>

				<x:scenario label="Without default namespace">
					<x:call function="x:resolve-EQName-ignoring-default-ns">
						<x:param select="'foo'" />
						<x:param>
							<e xmlns="" />
						</x:param>
					</x:call>
					<x:expect label="Resolved"
						test="x:QName-exactly-equal($x:result, QName('', 'foo'))" />
				</x:scenario>
			</x:scenario>
		</x:scenario>
	</x:scenario>

	<x:scenario
		label="Scenario for testing function QName-expression-from-EQName-ignoring-default-ns">
		<x:scenario label="URIQualifiedName">
			<x:scenario label="With URI">
				<x:call function="x:QName-expression-from-EQName-ignoring-default-ns">
					<x:param>Q{'">&lt;#,|%7D&#x20;%7B][$^}foo</x:param>
					<x:param>
						<e />
					</x:param>
				</x:call>
				<x:expect as="xs:string" label="Converted with apostrophe escaped">
					<x:text xml:space="preserve">QName('''">&lt;#,|%7D&#x20;%7B][$^', 'foo')</x:text>
				</x:expect>
			</x:scenario>

			<x:scenario label="Without URI">
				<x:call function="x:QName-expression-from-EQName-ignoring-default-ns">
					<x:param select="'Q{}foo'" />
					<x:param>
						<e xmlns="default-ns" />
					</x:param>
				</x:call>
				<x:expect as="xs:string"
					label="Converted without being affected by the default namespace">
					<x:text xml:space="preserve">QName('', 'foo')</x:text>
				</x:expect>
			</x:scenario>
		</x:scenario>

		<x:scenario label="Lexical QName">
			<x:scenario label="With prefix">
				<x:call function="x:QName-expression-from-EQName-ignoring-default-ns">
					<x:param select="'prefix:foo'" />
					<x:param>
						<e xmlns:prefix="prefixed-ns" />
					</x:param>
				</x:call>
				<x:expect as="xs:string" label="Converted">
					<x:text xml:space="preserve">QName('prefixed-ns', 'prefix:foo')</x:text>
				</x:expect>
			</x:scenario>

			<x:scenario label="Without prefix">
				<x:scenario label="With default namespace">
					<x:call function="x:QName-expression-from-EQName-ignoring-default-ns">
						<x:param select="'foo'" />
						<x:param>
							<e xmlns="default-ns" />
						</x:param>
					</x:call>
					<x:expect as="xs:string" label="Converted without using the default namespace">
						<x:text xml:space="preserve">QName('', 'foo')</x:text>
					</x:expect>
				</x:scenario>

				<x:scenario label="Without default namespace">
					<x:call function="x:QName-expression-from-EQName-ignoring-default-ns">
						<x:param select="'foo'" />
						<x:param>
							<e xmlns="" />
						</x:param>
					</x:call>
					<x:expect as="xs:string" label="Converted">
						<x:text xml:space="preserve">QName('', 'foo')</x:text>
					</x:expect>
				</x:scenario>
			</x:scenario>
		</x:scenario>
	</x:scenario>

	<x:scenario label="Scenario for testing function UQName-from-EQName-ignoring-default-ns">
		<x:scenario label="URIQualifiedName">
			<x:scenario label="With URI">
				<x:variable as="xs:anyURI" name="ridiculous-uri"
					>'">&lt;#,|%7D&#x20;%7B][$^</x:variable>
				<x:variable as="xs:string" name="uqname" select="x:UQName($ridiculous-uri, 'foo')" />
				<x:call function="x:UQName-from-EQName-ignoring-default-ns">
					<x:param select="$uqname" />
					<x:param>
						<e xmlns="default-ns" />
					</x:param>
				</x:call>
				<x:expect label="Intact" select="$uqname" />
			</x:scenario>

			<x:scenario label="Without URI">
				<x:variable as="xs:string" name="uqname">Q{}foo</x:variable>
				<x:call function="x:UQName-from-EQName-ignoring-default-ns">
					<x:param select="$uqname" />
					<x:param>
						<e xmlns="default-ns" />
					</x:param>
				</x:call>
				<x:expect label="Intact" select="$uqname" />
			</x:scenario>
		</x:scenario>

		<x:scenario label="Lexical QName">
			<x:scenario label="With prefix">
				<x:call function="x:UQName-from-EQName-ignoring-default-ns">
					<x:param select="'prefix:foo'" />
					<x:param>
						<e xmlns:prefix="prefixed-ns" />
					</x:param>
				</x:call>
				<x:expect as="xs:string" label="Resolved with prefix">Q{prefixed-ns}foo</x:expect>
			</x:scenario>

			<x:scenario label="Without prefix">
				<x:scenario label="With default namespace">
					<x:call function="x:UQName-from-EQName-ignoring-default-ns">
						<x:param select="'foo'" />
						<x:param>
							<e xmlns="default-ns" />
						</x:param>
					</x:call>
					<x:expect as="xs:string" label="Resolved without using the default namespace"
						>Q{}foo</x:expect>
				</x:scenario>

				<x:scenario label="Without default namespace">
					<x:call function="x:UQName-from-EQName-ignoring-default-ns">
						<x:param select="'foo'" />
						<x:param>
							<e xmlns="" />
						</x:param>
					</x:call>
					<x:expect as="xs:string" label="Resolved as no prefix">Q{}foo</x:expect>
				</x:scenario>
			</x:scenario>
		</x:scenario>
	</x:scenario>

	<x:scenario label="Scenario for testing variable capture-NCName">
		<x:context />
		<x:expect label="Captured" select="'bar'" test="
				replace(
					'foo:bar[baz]',
					'^.+:' || $local:capture-NCName || '.*$',
					'$1'
				)" />
	</x:scenario>

	<x:scenario label="Scenario for testing function resolve-UQName">
		<x:scenario label="With URI">
			<x:variable as="xs:anyURI" name="ridiculous-uri">'">&lt;#,|%7D&#x20;%7B][$^</x:variable>
			<x:call function="local:resolve-UQName">
				<x:param select="x:UQName($ridiculous-uri, 'foo')" />
			</x:call>
			<x:expect label="Resolved"
				test="x:QName-exactly-equal($x:result, QName($ridiculous-uri, 'foo'))" />
		</x:scenario>

		<x:scenario label="Without URI">
			<x:call function="local:resolve-UQName">
				<x:param select="'Q{}foo'" />
			</x:call>
			<x:expect label="Resolved as no namespace"
				test="x:QName-exactly-equal($x:result, QName('', 'foo'))" />
		</x:scenario>
	</x:scenario>

</x:description>
