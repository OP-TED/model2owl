<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.jenitennison.com/xslt/xspec"
        xspec="../../report.xspec"
        stylesheet="../../../../mirror.xsl"
        date="2000-01-01T00:00:00Z">
   <scenario id="scenario1" xspec="../../report.xspec">
      <label>Function (xspec/xspec#355)</label>
      <scenario id="scenario1-scenario1" xspec="../../report.xspec">
         <label>Array</label>
         <input-wrap xmlns="">
            <x:call xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="Q{x-urn:test:mirror}param-mirror">
               <x:param as="array(*)" select="['foo', 1, [2, 'bar']]"/>
            </x:call>
         </input-wrap>
         <result select="/*">
            <content-wrap xmlns="">
               <pseudo-array xmlns="http://www.jenitennison.com/xslt/xspec">["foo",1,[2,"bar"]]</pseudo-array>
            </content-wrap>
         </result>
         <test id="scenario1-scenario1-expect1" successful="false">
            <label>Serialized array should be reported upon failure</label>
            <expect select="()"/>
         </test>
      </scenario>
      <scenario id="scenario1-scenario2" xspec="../../report.xspec">
         <label>Map</label>
         <input-wrap xmlns="">
            <x:call xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="Q{x-urn:test:mirror}param-mirror">
               <x:param as="map(*)" select="      map {       'foo': 1,       2: 'bar'      }"/>
            </x:call>
         </input-wrap>
         <result select="/*">
            <content-wrap xmlns="">
               <pseudo-map xmlns="http://www.jenitennison.com/xslt/xspec">map{2:"bar","foo":1}</pseudo-map>
            </content-wrap>
         </result>
         <test id="scenario1-scenario2-expect1" successful="false">
            <label>Serialized map should be reported upon failure</label>
            <expect select="()"/>
         </test>
      </scenario>
   </scenario>
   <scenario id="scenario2" xspec="../../report.xspec">
      <label>Element, attribute (xspec/xspec#357)</label>
      <input-wrap xmlns="">
         <x:call xmlns:x="http://www.jenitennison.com/xslt/xspec"
                 function="Q{x-urn:test:mirror}param-mirror">
            <x:param as="node()+" select="elem1 | elem2/attribute()">
               <elem1>text</elem1>
               <elem2 attr="attr-val"/>
            </x:param>
         </x:call>
      </input-wrap>
      <result select="/*/(@* | node())">
         <content-wrap xmlns="">
            <pseudo-element xmlns="http://www.jenitennison.com/xslt/xspec">
               <elem1 xmlns:x="http://www.jenitennison.com/xslt/xspec" xmlns="">text</elem1>
            </pseudo-element>
            <pseudo-attribute xmlns="http://www.jenitennison.com/xslt/xspec" attr="attr-val"/>
         </content-wrap>
      </result>
      <test id="scenario2-expect1" successful="false">
         <label>@attr should be reported as an attribute</label>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario3" xspec="../../report.xspec">
      <label>Attributes of the same name (xspec/xspec#358)</label>
      <input-wrap xmlns="">
         <x:call xmlns:x="http://www.jenitennison.com/xslt/xspec"
                 function="Q{x-urn:test:mirror}param-mirror">
            <x:param as="attribute()+" select="element()/attribute()">
               <elem1 attr="foo"/>
               <elem2 attr="bar"/>
            </x:param>
         </x:call>
      </input-wrap>
      <result select="/*/@*">
         <content-wrap xmlns="">
            <pseudo-attribute xmlns="http://www.jenitennison.com/xslt/xspec" attr="foo"/>
            <pseudo-attribute xmlns="http://www.jenitennison.com/xslt/xspec" attr="bar"/>
         </content-wrap>
      </result>
      <test id="scenario3-expect1" successful="false">
         <label>Both @attr=foo and @attr=bar should be reported</label>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario4" xspec="../../report.xspec">
      <label>Attribute, element, attribute (xspec/xspec#360)</label>
      <input-wrap xmlns="">
         <x:call xmlns:x="http://www.jenitennison.com/xslt/xspec"
                 function="Q{x-urn:test:mirror}param-mirror">
            <x:param as="node()+" select="element()/attribute() | elem2">
               <elem1 attr1="attr1-val"/>
               <elem2>text</elem2>
               <elem3 attr3="attr3-val"/>
            </x:param>
         </x:call>
      </input-wrap>
      <result select="/*/(@* | node())">
         <content-wrap xmlns="">
            <pseudo-attribute xmlns="http://www.jenitennison.com/xslt/xspec" attr1="attr1-val"/>
            <pseudo-element xmlns="http://www.jenitennison.com/xslt/xspec">
               <elem2 xmlns:x="http://www.jenitennison.com/xslt/xspec" xmlns="">text</elem2>
            </pseudo-element>
            <pseudo-attribute xmlns="http://www.jenitennison.com/xslt/xspec" attr3="attr3-val"/>
         </content-wrap>
      </result>
      <test id="scenario4-expect1" successful="false">
         <label>[Result] should be reported</label>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario5" xspec="../../report.xspec">
      <label>Document node with no children (xspec/xspec#697)</label>
      <input-wrap xmlns="">
         <x:call xmlns:x="http://www.jenitennison.com/xslt/xspec"
                 function="Q{x-urn:test:mirror}param-mirror">
            <x:param select="parse-xml-fragment('')"/>
         </x:call>
      </input-wrap>
      <result select="/self::document-node()">
         <content-wrap xmlns=""/>
      </result>
      <test id="scenario5-expect1" successful="false">
         <label>XPath should be reported between Result title and box</label>
         <expect select="()"/>
      </test>
   </scenario>
   <scenario id="scenario6" xspec="../../report.xspec">
      <label>XPath is different, but serialized node looks as if same</label>
      <scenario id="scenario6-scenario1" xspec="../../report.xspec">
         <label>[Result] = document node, [Expected Result] = element</label>
         <input-wrap xmlns="">
            <x:call xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="Q{x-urn:test:mirror}param-mirror">
               <x:param as="document-node()" select="/">
                  <test/>
               </x:param>
            </x:call>
         </input-wrap>
         <result select="/self::document-node()">
            <content-wrap xmlns="">
               <test xmlns:x="http://www.jenitennison.com/xslt/xspec"/>
            </content-wrap>
         </result>
         <test id="scenario6-scenario1-expect1" successful="false">
            <label>XPath should be colored as different. Serialized node should be colored as same.</label>
            <expect select="/element()">
               <content-wrap xmlns="">
                  <test xmlns:x="http://www.jenitennison.com/xslt/xspec"/>
               </content-wrap>
            </expect>
         </test>
      </scenario>
      <scenario id="scenario6-scenario2" xspec="../../report.xspec">
         <label>[Result] = element, [Expected Result] = document node.</label>
         <input-wrap xmlns="">
            <x:call xmlns:x="http://www.jenitennison.com/xslt/xspec"
                    function="Q{x-urn:test:mirror}param-mirror">
               <x:param as="element()">
                  <test/>
               </x:param>
            </x:call>
         </input-wrap>
         <result select="/element()">
            <content-wrap xmlns="">
               <test xmlns:x="http://www.jenitennison.com/xslt/xspec"/>
            </content-wrap>
         </result>
         <test id="scenario6-scenario2-expect1" successful="false">
            <label>XPath should be colored as different. Serialized node should be colored as same.</label>
            <expect select="/self::document-node()">
               <content-wrap xmlns="">
                  <test xmlns:x="http://www.jenitennison.com/xslt/xspec"/>
               </content-wrap>
            </expect>
         </test>
      </scenario>
   </scenario>
   <scenario id="scenario7" xspec="../../report.xspec">
      <label>Sequence of multiple atomic values</label>
      <input-wrap xmlns="">
         <x:call xmlns:x="http://www.jenitennison.com/xslt/xspec"
                 function="Q{x-urn:test:mirror}param-mirror">
            <x:param select="'foo', 1, 2, 'bar'"/>
         </x:call>
      </input-wrap>
      <result select="'foo',&#xA;1,&#xA;2,&#xA;'bar'"/>
      <test id="scenario7-expect1" successful="false">
         <label>Atomic values in [Result] and [Expected Result] are separated by comma and new line</label>
         <expect select="QName('', 'foo'),&#xA;1,&#xA;2,&#xA;'bar'"/>
      </test>
   </scenario>
   <scenario id="scenario8" xspec="../../report.xspec">
      <label>Derived types</label>
      <input-wrap xmlns="">
         <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                 xmlns:x="http://www.jenitennison.com/xslt/xspec"
                 function="Q{x-urn:test:mirror}param-mirror"/>
      </input-wrap>
      <scenario id="scenario8-scenario1" xspec="../../report.xspec">
         <label>Derived from xs:dateTime</label>
         <scenario id="scenario8-scenario1-scenario1" xspec="../../report.xspec">
            <label>xs:dateTimeStamp</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:dateTimeStamp('1234-01-02T03:04:05Z')"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}dateTimeStamp('1234-01-02T03:04:05Z')"/>
            <test id="scenario8-scenario1-scenario1-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}dateTimeStamp('1234-01-02T03:04:05Z')"
						(XSLT) or
						"Q{http://www.w3.org/2001/XMLSchema}dateTime('1234-01-02T03:04:05Z')"
						(XQuery)</label>
               <expect select="()"/>
            </test>
         </scenario>
      </scenario>
      <scenario id="scenario8-scenario2" xspec="../../report.xspec">
         <label>Derived from xs:decimal</label>
         <scenario id="scenario8-scenario2-scenario1" xspec="../../report.xspec">
            <label>xs:integer</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:integer(1)"/>
               </x:call>
            </input-wrap>
            <result select="1"/>
            <test id="scenario8-scenario2-scenario1-expect1" successful="false">
               <label>[Result] must be "1"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario2-scenario2" xspec="../../report.xspec">
            <label>xs:long</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:long(1)"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}long(1)"/>
            <test id="scenario8-scenario2-scenario2-expect1" successful="false">
               <label>[Result] must be "Q{http://www.w3.org/2001/XMLSchema}long(1)"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario2-scenario3" xspec="../../report.xspec">
            <label>xs:int</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:int(1)"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}int(1)"/>
            <test id="scenario8-scenario2-scenario3-expect1" successful="false">
               <label>[Result] must be "Q{http://www.w3.org/2001/XMLSchema}int(1)"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario2-scenario4" xspec="../../report.xspec">
            <label>xs:short</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:short(1)"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}short(1)"/>
            <test id="scenario8-scenario2-scenario4-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}short(1)"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario2-scenario5" xspec="../../report.xspec">
            <label>xs:byte</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:byte(1)"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}byte(1)"/>
            <test id="scenario8-scenario2-scenario5-expect1" successful="false">
               <label>[Result] must be "Q{http://www.w3.org/2001/XMLSchema}byte(1)"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario2-scenario6" xspec="../../report.xspec">
            <label>xs:nonNegativeInteger</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:nonNegativeInteger(0)"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}nonNegativeInteger(0)"/>
            <test id="scenario8-scenario2-scenario6-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}nonNegativeInteger(0)"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario2-scenario7" xspec="../../report.xspec">
            <label>xs:positiveInteger</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:positiveInteger(1)"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}positiveInteger(1)"/>
            <test id="scenario8-scenario2-scenario7-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}positiveInteger(1)"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario2-scenario8" xspec="../../report.xspec">
            <label>xs:unsignedLong</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:unsignedLong(1)"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}unsignedLong(1)"/>
            <test id="scenario8-scenario2-scenario8-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}unsignedLong(1)"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario2-scenario9" xspec="../../report.xspec">
            <label>xs:unsignedInt</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:unsignedInt(1)"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}unsignedInt(1)"/>
            <test id="scenario8-scenario2-scenario9-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}unsignedInt(1)"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario2-scenario10" xspec="../../report.xspec">
            <label>xs:unsignedShort</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:unsignedShort(1)"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}unsignedShort(1)"/>
            <test id="scenario8-scenario2-scenario10-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}unsignedShort(1)"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario2-scenario11" xspec="../../report.xspec">
            <label>xs:unsignedByte</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:unsignedByte(1)"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}unsignedByte(1)"/>
            <test id="scenario8-scenario2-scenario11-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}unsignedByte(1)"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario2-scenario12" xspec="../../report.xspec">
            <label>xs:nonPositiveInteger</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:nonPositiveInteger(0)"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}nonPositiveInteger(0)"/>
            <test id="scenario8-scenario2-scenario12-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}nonPositiveInteger(0)"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario2-scenario13" xspec="../../report.xspec">
            <label>xs:negativeInteger</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:negativeInteger(-1)"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}negativeInteger(-1)"/>
            <test id="scenario8-scenario2-scenario13-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}negativeInteger(-1)"</label>
               <expect select="()"/>
            </test>
         </scenario>
      </scenario>
      <scenario id="scenario8-scenario3" xspec="../../report.xspec">
         <label>Derived from xs:duration</label>
         <scenario id="scenario8-scenario3-scenario1" xspec="../../report.xspec">
            <label>xs:dayTimeDuration</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:dayTimeDuration('P1DT2H3M4S')"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}dayTimeDuration('P1DT2H3M4S')"/>
            <test id="scenario8-scenario3-scenario1-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}dayTimeDuration('P1DT2H3M4S')"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario3-scenario2" xspec="../../report.xspec">
            <label>xs:yearMonthDuration</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:yearMonthDuration('P1Y2M')"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}yearMonthDuration('P1Y2M')"/>
            <test id="scenario8-scenario3-scenario2-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}yearMonthDuration('P1Y2M')"</label>
               <expect select="()"/>
            </test>
         </scenario>
      </scenario>
      <scenario id="scenario8-scenario4" xspec="../../report.xspec">
         <label>Derived from xs:string</label>
         <scenario id="scenario8-scenario4-scenario1" xspec="../../report.xspec">
            <label>xs:normalizedString</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:normalizedString('foo')"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}normalizedString('foo')"/>
            <test id="scenario8-scenario4-scenario1-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}normalizedString('foo')"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario4-scenario2" xspec="../../report.xspec">
            <label>xs:token</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:token('foo')"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}token('foo')"/>
            <test id="scenario8-scenario4-scenario2-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}token('foo')"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario4-scenario3" xspec="../../report.xspec">
            <label>xs:language</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:language('en')"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}language('en')"/>
            <test id="scenario8-scenario4-scenario3-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}language('en')"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario4-scenario4" xspec="../../report.xspec">
            <label>xs:Name</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:Name('foo')"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}Name('foo')"/>
            <test id="scenario8-scenario4-scenario4-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}Name('foo')"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario4-scenario5" xspec="../../report.xspec">
            <label>xs:NCName</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:NCName('foo')"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}NCName('foo')"/>
            <test id="scenario8-scenario4-scenario5-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}NCName('foo')"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario4-scenario6" xspec="../../report.xspec">
            <label>xs:ENTITY</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:ENTITY('foo')"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}ENTITY('foo')"/>
            <test id="scenario8-scenario4-scenario6-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}ENTITY('foo')"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario4-scenario7" xspec="../../report.xspec">
            <label>xs:ID</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:ID('foo')"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}ID('foo')"/>
            <test id="scenario8-scenario4-scenario7-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}ID('foo')"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario4-scenario8" xspec="../../report.xspec">
            <label>xs:IDREF</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:IDREF('foo')"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}IDREF('foo')"/>
            <test id="scenario8-scenario4-scenario8-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}IDREF('foo')"</label>
               <expect select="()"/>
            </test>
         </scenario>
         <scenario id="scenario8-scenario4-scenario9" xspec="../../report.xspec">
            <label>xs:NMTOKEN</label>
            <input-wrap xmlns="">
               <x:call xmlns:xs="http://www.w3.org/2001/XMLSchema"
                       xmlns:x="http://www.jenitennison.com/xslt/xspec">
                  <x:param select="xs:NMTOKEN('foo')"/>
               </x:call>
            </input-wrap>
            <result select="Q{http://www.w3.org/2001/XMLSchema}NMTOKEN('foo')"/>
            <test id="scenario8-scenario4-scenario9-expect1" successful="false">
               <label>[Result] must be
						"Q{http://www.w3.org/2001/XMLSchema}NMTOKEN('foo')"</label>
               <expect select="()"/>
            </test>
         </scenario>
      </scenario>
   </scenario>
</report>
