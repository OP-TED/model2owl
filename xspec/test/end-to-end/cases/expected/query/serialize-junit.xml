<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="serialize.xspec">
   <testsuite name="When the result is a comment node, the report HTML must serialize it as&#xA;&#x9;&#x9;&#x9;&lt;!-- --&gt;. (xspec/xspec#356) So..."
              tests="3"
              failures="3">
      <testcase name="When x:result in the report XML contains a comment node, [Result] with diff must be serialized as &lt;!-- --&gt;."
                status="failed">
         <failure message="expect assertion failed">Expected Result: ()</failure>
      </testcase>
      <testcase name="When x:result in the report XML contains a comment node, [Result] without diff must be serialized as &lt;!-- --&gt;."
                status="failed">
         <failure message="expect assertion failed">Expecting: false()</failure>
      </testcase>
      <testcase name="When x:expect in the report XML contains a comment node, [Expected Result] with diff must be serialized as&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;!-- --&gt;."
                status="failed">
         <failure message="expect assertion failed"/>
      </testcase>
   </testsuite>
   <testsuite name="When the result is indented in the report XML file, the report HTML must serialize&#xA;&#x9;&#x9;&#x9;it with indentation."
              tests="6"
              failures="6">
      <testcase name="So... (xspec/xspec#359) When x:result in the report XML file is a sequence of simple nested&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;elements serialized with indentation, all elements in [Result] with diff must be serialized with&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;indentation."
                status="failed">
         <failure message="expect assertion failed">Expected Result: ()</failure>
      </testcase>
      <testcase name="So... (xspec/xspec#359) When x:result in the report XML file is a sequence of simple nested&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;elements serialized with indentation, all elements in [Result] without diff must be serialized with&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;indentation."
                status="failed">
         <failure message="expect assertion failed">Expecting: false()</failure>
      </testcase>
      <testcase name="So... (xspec/xspec#359) When x:expect in the report XML file is a sequence of simple nested&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;elements serialized with indentation, all elements in [Expected Result] with diff must be serialized with&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;indentation."
                status="failed">
         <failure message="expect assertion failed"/>
      </testcase>
      <testcase name="But the diff must not be affected by indentation. So... When a node is indented, the diff of the indented node itself must not be&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;affected. (xspec/xspec#367) So... When &lt;bar&gt; is indented but &lt;?bar?&gt; is not indented in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;x:result of the report XML file, both &lt;bar&gt; and &lt;?bar?&gt; must be green."
                status="failed">
         <failure message="expect assertion failed"/>
      </testcase>
      <testcase name="But the diff must not be affected by indentation. So... When a node is indented, the diff of the indented node itself must not be&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;affected. (xspec/xspec#367) So... When &lt;bar&gt; is indented but &lt;?bar?&gt; is not indented in&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;x:expect of the report XML file, both &lt;bar&gt; and &lt;?bar?&gt; must be green."
                status="failed">
         <failure message="expect assertion failed"/>
      </testcase>
      <testcase name="But the diff must not be affected by indentation. So... When a child node of an element is indented, the diff of the element must&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;not be affected. So, when the same &lt;bar&gt; in &lt;foo&gt; is indented in x:result&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;and x:expect of the report XML file with different indentation&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;length, &lt;foo&gt; must be green."
                status="failed">
         <failure message="expect assertion failed"/>
      </testcase>
   </testsuite>
   <testsuite name="When x:expect has an element of '...',"
              tests="1"
              failures="1">
      <testcase name="the corresponding nodes in [Result] with diff must be serialized in green.&#xA;&#x9;&#x9;&#x9;&#x9;(xspec/xspec#379)"
                status="failed">
         <failure message="expect assertion failed"/>
      </testcase>
   </testsuite>
   <testsuite name="When the result contains significant text nodes,"
              tests="2"
              failures="2">
      <testcase name="both in [Result] and [Expected Result] with diff, the significant text nodes&#xA;&#x9;&#x9;&#x9;&#x9;must be serialized with color. (xspec/xspec#386)"
                status="failed">
         <failure message="expect assertion failed"/>
      </testcase>
      <testcase name="in [Result] without diff, the significant text nodes must be serialized without&#xA;&#x9;&#x9;&#x9;&#x9;color."
                status="failed">
         <failure message="expect assertion failed">Expecting: false()</failure>
      </testcase>
   </testsuite>
   <testsuite name="When the result contains an element, the report HTML must serialize nodes in its&#xA;&#x9;&#x9;&#x9;opening tag with aligned indentation. (xspec/xspec#689) So..."
              tests="6"
              failures="6">
      <testcase name="When the report XML contains an element with several namespaces in x:result, [Result] with diff must be serialized with aligned&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;indentation."
                status="failed">
         <failure message="expect assertion failed">Expected Result: ()</failure>
      </testcase>
      <testcase name="When the report XML contains an element with several namespaces in x:result, [Result] without diff must be serialized with aligned&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;indentation."
                status="failed">
         <failure message="expect assertion failed">Expecting: false()</failure>
      </testcase>
      <testcase name="When the report XML contains an element with several namespaces in x:expect, [Expected Result] with diff must be serialized with aligned&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;indentation."
                status="failed">
         <failure message="expect assertion failed"/>
      </testcase>
      <testcase name="When the report XML contains an element with several attributes in x:result, [Result] with diff must be serialized with aligned&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;indentation."
                status="failed">
         <failure message="expect assertion failed">Expected Result: ()</failure>
      </testcase>
      <testcase name="When the report XML contains an element with several attributes in x:result, [Result] without diff must be serialized with aligned&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;indentation."
                status="failed">
         <failure message="expect assertion failed">Expecting: false()</failure>
      </testcase>
      <testcase name="When the report XML contains an element with several attributes in x:expect, [Expected Result] with diff must be serialized with aligned&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;indentation."
                status="failed">
         <failure message="expect assertion failed"/>
      </testcase>
   </testsuite>
   <testsuite name="When the result contains attribute," tests="2" failures="2">
      <testcase name="both in [Result] and [Expected Result] with diff, The exact-match (taking '...' into account) attributes must be serialized&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;as green=&#34;green&#34;. The name-match attributes must be serialized as&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;palePink=&#34;solidPink&#34;. The orphan attributes must be serialized as&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;solidPink=&#34;solidPink&#34; regardless of their values."
                status="failed">
         <failure message="expect assertion failed"/>
      </testcase>
      <testcase name="in [Result] without diff, all the attributes must be serialized without color."
                status="failed">
         <failure message="expect assertion failed">Expecting: false()</failure>
      </testcase>
   </testsuite>
   <testsuite name="When the result contains processing instructions,"
              tests="2"
              failures="2">
      <testcase name="both in [Result] and [Expected Result] with diff, The exact-match (taking '...' into account) processing instructions must be&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;serialized as &lt;?green green?&gt;. The name-match processing&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;instructions must be serialized as &lt;?palePink solidPink?&gt;. The&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;value-match (taking '...' into account) processing instructions must be&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;serialized as &lt;?solidPink green?&gt;. The no-match processing&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;instructions must be serialized as &lt;?solidPink solidPink?&gt;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;regardless of their values."
                status="failed">
         <failure message="expect assertion failed"/>
      </testcase>
      <testcase name="in [Result] without diff, all the processing instructions must be serialized without color."
                status="failed">
         <failure message="expect assertion failed">Expecting: false()</failure>
      </testcase>
   </testsuite>
   <testsuite name="When the result contains an element with the default namespace undeclared"
              tests="4"
              failures="4">
      <testcase name="and it is top-level, both in [Result] and [Expected Result] with diff, the top-level element should not have unnecessary xmlns=&#34;&#34;."
                status="failed">
         <failure message="expect assertion failed"/>
      </testcase>
      <testcase name="and it is top-level, in [Result] without diff, the top-level element should not have unnecessary xmlns=&#34;&#34;."
                status="failed">
         <failure message="expect assertion failed">Expecting: false()</failure>
      </testcase>
      <testcase name="and it is 2nd-level, both in [Result] and [Expected Result] with diff, the 2nd-level element should have xmlns=&#34;&#34;."
                status="failed">
         <failure message="expect assertion failed"/>
      </testcase>
      <testcase name="and it is 2nd-level, in [Result] without diff, the 2nd-level element should have xmlns=&#34;&#34;."
                status="failed">
         <failure message="expect assertion failed">Expecting: false()</failure>
      </testcase>
   </testsuite>
   <testsuite name="When the result is a sequence of nodes containing '&amp;' and '&lt;'&#xA;&#x9;&#x9;&#x9;(xspec/xspec#1155)"
              tests="2"
              failures="2">
      <testcase name="both in [Result] and [Expected Result] with diff, '&amp;' and '&lt;' (and&#xA;&#x9;&#x9;&#x9;&#x9;possibly other special characters) should be escaped without seeming&#xA;&#x9;&#x9;&#x9;&#x9;indentation."
                status="failed">
         <failure message="expect assertion failed"/>
      </testcase>
      <testcase name="in [Result] without diff, '&amp;' and '&lt;' (and possibly other special&#xA;&#x9;&#x9;&#x9;&#x9;characters) should be escaped without seeming indentation."
                status="failed">
         <failure message="expect assertion failed">Expecting: false()</failure>
      </testcase>
   </testsuite>
</testsuites>
