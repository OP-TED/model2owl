<?xml version="1.0" encoding="UTF-8"?>
<!--
	no-prefix_stylesheet.xspec copies this file for testing no-prefix cases.
	When modifying this file, check whether no-prefix_stylesheet.xspec needs any additions or updates.
-->
<x:description stylesheet="mirror.xsl" xmlns:mirror="x-urn:test:mirror"
	xmlns:use-uqname="x-urn:test:use-uqname" xmlns:x="http://www.jenitennison.com/xslt/xspec">

	<!-- Leading and trailing whitespace strings ('&#x09;&#x0A;&#x0D;&#x20;') are inserted to the
		tested attributes deliberately. -->

	<x:param
		as="
			&#x09;&#x0A;&#x0D;&#x20;
			element(Q{x-urn:test:use-uqname}global-param-child)
			&#x09;&#x0A;&#x0D;&#x20;"
		name="
			&#x09;&#x0A;&#x0D;&#x20;
			Q{x-urn:test:use-uqname}global-param
			&#x09;&#x0A;&#x0D;&#x20;"
		select="
			&#x09;&#x0A;&#x20;
			element(Q{x-urn:test:use-uqname}global-param-child)
			&#x09;&#x0A;&#x20;">
		<use-uqname:global-param-child />
	</x:param>

	<x:scenario label="Using URIQualifiedName in">

		<x:scenario label="global-param (@as | @name | @select)">
			<x:call template="mirror:param-mirror">
				<x:param name="param-items" select="$use-uqname:global-param" />
			</x:call>
			<x:expect label="should be possible">
				<use-uqname:global-param-child />
			</x:expect>
		</x:scenario>

		<x:scenario label="context @mode and context template-param (@as | @name | @select)">
			<x:context
				mode="
					&#x09;&#x0A;&#x0D;&#x20;
					Q{x-urn:test:mirror}param-mirror
					&#x09;&#x0A;&#x0D;&#x20;">
				<x:param
					as="
						&#x09;&#x0A;&#x0D;&#x20;
						element(Q{x-urn:test:use-uqname}template-param-child)
						&#x09;&#x0A;&#x0D;&#x20;"
					name="
						&#x09;&#x0A;&#x0D;&#x20;
						Q{}param-items
						&#x09;&#x0A;&#x0D;&#x20;"
					select="
						&#x09;&#x0A;&#x0D;&#x20;
						element(Q{x-urn:test:use-uqname}template-param-child)
						&#x09;&#x0A;&#x0D;&#x20;">
					<use-uqname:template-param-child />
				</x:param>
				<use-uqname:context-child />
			</x:context>
			<x:expect label="should be possible">
				<use-uqname:template-param-child />
			</x:expect>
		</x:scenario>

		<x:scenario label="context (@as | @select)">
			<x:context
				as="
					&#x09;&#x0A;&#x0D;&#x20;
					element(Q{x-urn:test:use-uqname}context-child)
					&#x09;&#x0A;&#x0D;&#x20;"
				select="
					&#x09;&#x0A;&#x0D;&#x20;
					element(Q{x-urn:test:use-uqname}context-child)
					&#x09;&#x0A;&#x0D;&#x20;">
				<use-uqname:context-child />
			</x:context>
			<x:call template="mirror:context-mirror" />
			<x:expect label="should be possible">
				<use-uqname:context-child />
			</x:expect>
		</x:scenario>

		<x:scenario
			label="template-call @template and template-call template-param (@as | @name | @select)">
			<x:call
				template="
					&#x09;&#x0A;&#x0D;&#x20;
					Q{x-urn:test:mirror}param-mirror
					&#x09;&#x0A;&#x0D;&#x20;">
				<x:param
					as="
						&#x09;&#x0A;&#x0D;&#x20;
						element(Q{x-urn:test:use-uqname}template-param-child)
						&#x09;&#x0A;&#x0D;&#x20;"
					name="
						&#x09;&#x0A;&#x0D;&#x20;
						Q{}param-items
						&#x09;&#x0A;&#x0D;&#x20;"
					select="
						&#x09;&#x0A;&#x0D;&#x20;
						Q{x-urn:test:use-uqname}template-param-child
						&#x09;&#x0A;&#x0D;&#x20;">
					<use-uqname:template-param-child />
				</x:param>
			</x:call>
			<x:expect label="should be possible">
				<use-uqname:template-param-child />
			</x:expect>
		</x:scenario>

	</x:scenario>

</x:description>
