<?xml version="1.0" encoding="UTF-8"?>
<x:description stylesheet="items.xsl" xmlns:items="x-urn:test:xspec-items"
	xmlns:x="http://www.jenitennison.com/xslt/xspec" xmlns:xs="http://www.w3.org/2001/XMLSchema">

	<!--
		The test target (../src/common/uqname-utils.xsl) is included implicitly by the XSpec
		compiler. You don't need to specify it in /x:description/@stylesheet.
	-->

	<x:scenario label="Scenario for testing function UQName">
		<x:call function="x:UQName" />

		<x:scenario label="URI length ge 1">
			<x:call>
				<x:param select="'my-uri'" />
				<x:param select="'my-local-name'" />
			</x:call>
			<x:expect as="xs:string" label="Constructed">Q{my-uri}my-local-name</x:expect>
		</x:scenario>

		<x:scenario label="URI is zero-length string">
			<x:call>
				<x:param select="''" />
				<x:param select="'my-local-name'" />
			</x:call>
			<x:expect as="xs:string" label="Constructed">Q{}my-local-name</x:expect>
		</x:scenario>
	</x:scenario>

	<x:scenario label="Scenario for testing function known-UQName">
		<x:call function="x:known-UQName" />

		<x:scenario label="config">
			<x:call>
				<x:param select="'config:my-local-name'" />
			</x:call>
			<x:expect as="xs:string" label="Constructed"
				>Q{http://saxon.sf.net/ns/configuration}my-local-name</x:expect>
		</x:scenario>

		<x:scenario label="deq">
			<x:call>
				<x:param select="'deq:my-local-name'" />
			</x:call>
			<x:expect as="xs:string" label="Constructed"
				>Q{urn:x-xspec:common:deep-equal}my-local-name</x:expect>
		</x:scenario>

		<x:scenario label="err">
			<x:call>
				<x:param select="'err:my-local-name'" />
			</x:call>
			<x:expect as="xs:string" label="Constructed"
				>Q{http://www.w3.org/2005/xqt-errors}my-local-name</x:expect>
		</x:scenario>

		<x:scenario label="impl">
			<x:call>
				<x:param select="'impl:my-local-name'" />
			</x:call>
			<x:expect as="xs:string" label="Constructed"
				>Q{urn:x-xspec:compile:impl}my-local-name</x:expect>
		</x:scenario>

		<x:scenario label="map">
			<x:call>
				<x:param select="'map:my-local-name'" />
			</x:call>
			<x:expect as="xs:string" label="Constructed"
				>Q{http://www.w3.org/2005/xpath-functions/map}my-local-name</x:expect>
		</x:scenario>

		<x:scenario label="output">
			<x:call>
				<x:param select="'output:my-local-name'" />
			</x:call>
			<x:expect as="xs:string" label="Constructed"
				>Q{http://www.w3.org/2010/xslt-xquery-serialization}my-local-name</x:expect>
		</x:scenario>

		<x:scenario label="rep">
			<x:call>
				<x:param select="'rep:my-local-name'" />
			</x:call>
			<x:expect as="xs:string" label="Constructed"
				>Q{urn:x-xspec:common:report-sequence}my-local-name</x:expect>
		</x:scenario>

		<x:scenario label="saxon">
			<x:call>
				<x:param select="'saxon:my-local-name'" />
			</x:call>
			<x:expect as="xs:string" label="Constructed"
				>Q{http://saxon.sf.net/}my-local-name</x:expect>
		</x:scenario>

		<x:scenario label="svrl">
			<x:call>
				<x:param select="'svrl:my-local-name'" />
			</x:call>
			<x:expect as="xs:string" label="Constructed"
				>Q{http://purl.oclc.org/dsdl/svrl}my-local-name</x:expect>
		</x:scenario>

		<x:scenario label="x">
			<x:call>
				<x:param select="'x:my-local-name'" />
			</x:call>
			<x:expect as="xs:string" label="Constructed"
				>Q{http://www.jenitennison.com/xslt/xspec}my-local-name</x:expect>
		</x:scenario>

		<x:scenario label="xs">
			<x:call>
				<x:param select="'xs:my-local-name'" />
			</x:call>
			<x:expect as="xs:string" label="Constructed"
				>Q{http://www.w3.org/2001/XMLSchema}my-local-name</x:expect>
		</x:scenario>

		<x:scenario label="xsl">
			<x:call>
				<x:param select="'xsl:my-local-name'" />
			</x:call>
			<x:expect as="xs:string" label="Constructed"
				>Q{http://www.w3.org/1999/XSL/Transform}my-local-name</x:expect>
		</x:scenario>
	</x:scenario>

	<x:scenario label="Scenario for testing function UQName-from-QName">
		<x:call function="x:UQName-from-QName" />

		<x:scenario label="With namespace URI">
			<x:variable as="xs:anyURI" name="ridiculous-uri">'">&lt;#,|%7D&#x20;%7B][$^</x:variable>
			<x:variable as="xs:string" name="local-name" select="'foo'" />
			<x:variable as="xs:string" name="expected-uqname"
				select="'Q{' || $ridiculous-uri || '}' || $local-name" />

			<x:scenario label="With prefix">
				<x:call>
					<x:param select="QName($ridiculous-uri, 'prefix:' || $local-name)" />
				</x:call>
				<x:expect label="Constructed with namespace URI. No prefix."
					select="$expected-uqname" />
			</x:scenario>

			<x:scenario label="Without prefix">
				<x:call>
					<x:param select="QName($ridiculous-uri, $local-name)" />
				</x:call>
				<x:expect label="Constructed with namespace URI. No prefix"
					select="$expected-uqname" />
			</x:scenario>
		</x:scenario>

		<x:scenario label="Without namespace URI">
			<x:call>
				<x:param select="QName('', 'foo')" />
			</x:call>
			<x:expect as="xs:string" label="Constructed without namespace URI. No prefix"
				>Q{}foo</x:expect>
		</x:scenario>
	</x:scenario>

	<x:scenario label="Scenario for testing function node-UQName">
		<x:call function="x:node-UQName" />

		<x:scenario label="Attribute">
			<x:scenario label="With namespace URI">
				<x:call>
					<x:param as="attribute()" select="e/@*">
						<e my-prefix:my-local-name="" xmlns:my-prefix="my-uri" />
					</x:param>
				</x:call>
				<x:expect label="URIQualifiedName with namespace URI" select="string()"
					>Q{my-uri}my-local-name</x:expect>
			</x:scenario>

			<x:scenario label="Without namespace URI">
				<x:call>
					<x:param as="attribute()" select="e/@*">
						<e my-local-name="" />
					</x:param>
				</x:call>
				<x:expect label="URIQualifiedName without namespace URI" select="string()"
					>Q{}my-local-name</x:expect>
			</x:scenario>
		</x:scenario>

		<x:scenario label="Comment">
			<x:call>
				<x:param as="comment()" select="$items:comment" />
			</x:call>
			<x:expect label="Empty sequence" />
		</x:scenario>

		<x:scenario label="Document">
			<x:call>
				<x:param as="document-node()" select="$items:document" />
			</x:call>
			<x:expect label="Empty sequence" />
		</x:scenario>

		<x:scenario label="Element">
			<x:scenario label="With namespace URI">
				<x:call>
					<x:param as="element()">
						<my-prefix:my-local-name xmlns:my-prefix="my-uri" />
					</x:param>
				</x:call>
				<x:expect label="URIQualifiedName with namespace URI" select="string()"
					>Q{my-uri}my-local-name</x:expect>
			</x:scenario>

			<x:scenario label="Without namespace URI">
				<x:call>
					<x:param as="element()">
						<my-local-name />
					</x:param>
				</x:call>
				<x:expect label="URIQualifiedName without namespace URI" select="string()"
					>Q{}my-local-name</x:expect>
			</x:scenario>
		</x:scenario>

		<x:scenario label="Namespace">
			<x:scenario label="Default namespace">
				<x:call>
					<x:param as="namespace-node()" select="$items:default-namespace" />
				</x:call>
				<x:expect label="Empty sequence" />
			</x:scenario>

			<x:scenario label="Not default namespace">
				<x:call>
					<x:param as="namespace-node()" select="$items:namespace" />
				</x:call>
				<x:expect label="URIQualifiedName without namespace URI" select="string()"
					>Q{}namespace-name</x:expect>
			</x:scenario>
		</x:scenario>

		<x:scenario label="Processing instruction">
			<x:call>
				<x:param as="processing-instruction()" select="$items:processing-instruction" />
			</x:call>
			<x:expect label="URIQualifiedName without namespace URI" select="string()"
				>Q{}processing-instruction-name</x:expect>
		</x:scenario>

		<x:scenario label="Text">
			<x:call>
				<x:param as="text()" select="$items:text" />
			</x:call>
			<x:expect label="Empty sequence" />
		</x:scenario>
	</x:scenario>

</x:description>
