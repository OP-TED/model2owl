<?xml version="1.0" encoding="UTF-8"?>
<x:description
    xmlns:myv="x-urn:test:sch-location-compare:variable"
    xmlns:sch="http://purl.oclc.org/dsdl/schematron"
    xmlns:svrl="http://purl.oclc.org/dsdl/svrl"
    xmlns:x="http://www.jenitennison.com/xslt/xspec"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    stylesheet="../src/schematron/sch-location-compare.xsl">

    <x:scenario label="x:schematron-location-expand-xpath2">
        <!-- Variables to test replacing namespace uri with prefix (e.g. 2 namespaces 4 elements) -->
        <x:variable name="myv:location" select="failed-assert/@location" as="attribute(location)">
            <failed-assert
                location="/root[1]/*:sec[namespace-uri()='http://example.com/ns1'][2]/*:para[namespace-uri()='http://example.com/ns2'][2]/*:para[namespace-uri()='http://example.com/ns2'][3]" />
        </x:variable>
        <x:variable name="myv:namespaces-of-svrl-prefix" as="element(svrl:ns-prefix-in-attribute-values)+">
            <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns1" prefix="ex1" />
            <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns2" prefix="ex2" />
        </x:variable>
        <x:variable name="myv:expected-result" as="xs:string"
            select="'/root[1]/ex1:sec[2]/ex2:para[2]/ex2:para[3]'" />

        <x:scenario label="svrl:ns-prefix-in-attribute-values">
            <x:call function="x:schematron-location-expand-xpath2">
                <x:param select="$myv:location" />
                <x:param select="$myv:namespaces-of-svrl-prefix" />
            </x:call>
            <x:expect label="namespace prefixes applied" select="$myv:expected-result" />
        </x:scenario>

        <x:scenario label="sch:ns">
            <x:call function="x:schematron-location-expand-xpath2">
                <x:param select="$myv:location" />
                <x:param>
                    <sch:ns uri="http://example.com/ns1" prefix="ex1" />
                    <sch:ns uri="http://example.com/ns2" prefix="ex2" />
                </x:param>
            </x:call>
            <x:expect label="namespace prefixes applied" select="$myv:expected-result" />
        </x:scenario>

        <x:scenario label="Empty sequence">
            <x:scenario label="$location is empty">
                <x:call function="x:schematron-location-expand-xpath2">
                    <x:param />
                    <x:param select="$myv:namespaces-of-svrl-prefix" />
                </x:call>
                <x:expect label="Zero-length string" select="''" />
            </x:scenario>

            <x:scenario label="$namespaces is empty">
                <x:call function="x:schematron-location-expand-xpath2">
                    <x:param select="$myv:location" />
                    <x:param />
                </x:call>
                <x:expect label="same" select="string($myv:location)" />
            </x:scenario>

            <x:scenario label="Both $location and $namespaces are empty">
                <x:call function="x:schematron-location-expand-xpath2">
                    <x:param />
                    <x:param />
                </x:call>
                <x:expect label="Zero-length string" select="''" />
            </x:scenario>
        </x:scenario>
    </x:scenario>

    <x:scenario label="x:schematron-location-expand-xpath1">
        <x:scenario label="remove wildcard namespace (e.g. 3 elements)">
            <x:call function="x:schematron-location-expand-xpath1">
                <x:param name="location" select="successful-report/@location" as="attribute(location)">
                    <successful-report location="/root/*[local-name()='sec'][2]/*[local-name()='para'][2]"/>
                </x:param>
            </x:call>
            <x:expect label="namespace wildcard removed" select="'/root/sec[2]/para[2]'"/>
        </x:scenario>

        <x:scenario label="Empty sequence">
            <x:call function="x:schematron-location-expand-xpath1">
                <x:param />
            </x:call>
            <x:expect label="Zero-length string" select="''" />
        </x:scenario>
    </x:scenario>

    <x:scenario label="x:schematron-location-expand-xpath1-expect">
        <!-- Variables to test removing namespace prefixes -->
        <x:variable name="myv:expect-location-of-removal-scenario" as="xs:string">/root/ex1:sec/ex1:sec/ex2:para</x:variable>
        <x:variable name="myv:svrl-location-of-removal-scenario" as="xs:string">/root/*[local-name()='sec'][2]/*[local-name()='sec'][2]/*[local-name()='para'][2]</x:variable>
        <x:variable name="myv:namespaces-of-removal-scenario" as="element(svrl:ns-prefix-in-attribute-values)+">
            <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns1" prefix="ex1" />
            <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns2" prefix="ex2" />
        </x:variable>

        <x:scenario label="if no xpath1 style namespace in path">
            <x:call function="x:schematron-location-expand-xpath1-expect">
                <x:param name="expect-location">/ex1:section</x:param>
                <x:param name="svrl-location">/section[1]</x:param>
                <x:param name="namespaces">
                    <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns1" prefix="ex1"/>
                </x:param>
            </x:call>
            <x:expect label="same" select="'/ex1:section'"/>
        </x:scenario>

        <x:scenario label="if xpath1 style namespace in path">
            <x:call function="x:schematron-location-expand-xpath1-expect">
                <x:param select="$myv:expect-location-of-removal-scenario" />
                <x:param select="$myv:svrl-location-of-removal-scenario" />
                <x:param select="$myv:namespaces-of-removal-scenario" />
            </x:call>
            <x:expect label="namespace prefixes removed" select="'/root/sec/sec/para'"/>
        </x:scenario>

        <x:scenario label="Empty sequence">
            <x:scenario label="$expect-location is empty">
                <x:call function="x:schematron-location-expand-xpath1-expect">
                    <x:param />
                    <x:param select="$myv:svrl-location-of-removal-scenario" />
                    <x:param select="$myv:namespaces-of-removal-scenario" />
                </x:call>
                <x:expect label="Zero-length string" select="''" />
            </x:scenario>

            <x:scenario label="$svrl-location is empty">
                <x:call function="x:schematron-location-expand-xpath1-expect">
                    <x:param select="$myv:expect-location-of-removal-scenario" />
                    <x:param />
                    <x:param select="$myv:namespaces-of-removal-scenario" />
                </x:call>
                <x:expect label="same" select="$myv:expect-location-of-removal-scenario" />
            </x:scenario>

            <x:scenario label="$namespaces is empty">
                <x:call function="x:schematron-location-expand-xpath1-expect">
                    <x:param select="$myv:expect-location-of-removal-scenario" />
                    <x:param select="$myv:svrl-location-of-removal-scenario" />
                    <x:param />
                </x:call>
                <x:expect label="same" select="$myv:expect-location-of-removal-scenario" />
            </x:scenario>
        </x:scenario>
    </x:scenario>

    <x:scenario label="x:schematron-location-expand-attributes">
        <x:variable name="myv:location" as="xs:string">@*[namespace-uri()='http://example.com/ns2' and local-name()='type']</x:variable>
        <x:variable name="myv:namespaces" as="element(svrl:ns-prefix-in-attribute-values)+">
            <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns1" prefix="ex1" />
            <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns2" prefix="ex2" />
        </x:variable>
        <x:variable name="myv:expected-result" as="xs:string" select="'@ex2:type'" />

        <x:scenario label="Normal scenario">
            <x:call function="x:schematron-location-expand-attributes">
                <x:param select="$myv:location" />
                <x:param select="$myv:namespaces" />
            </x:call>
            <x:expect label="namespace prefix applied" select="$myv:expected-result" />
        </x:scenario>

        <x:scenario label="Only one namespace given">
            <x:scenario label="Miss">
                <x:call function="x:schematron-location-expand-attributes">
                    <x:param select="$myv:location" />
                    <x:param select="$myv:namespaces[1]" />
                </x:call>
                <x:expect label="same" select="$myv:location" />
            </x:scenario>

            <x:scenario label="Hit">
                <x:call function="x:schematron-location-expand-attributes">
                    <x:param select="$myv:location" />
                    <x:param select="$myv:namespaces[2]" />
                </x:call>
                <x:expect label="namespace prefix applied" select="$myv:expected-result" />
            </x:scenario>
        </x:scenario>

        <x:scenario label="Empty sequence">
            <x:scenario label="$location is empty">
                <x:call function="x:schematron-location-expand-attributes">
                    <x:param />
                    <x:param select="$myv:namespaces" />
                </x:call>
                <x:expect label="Zero-length string" select="''" />
            </x:scenario>

            <x:scenario label="$namespaces is empty">
                <x:call function="x:schematron-location-expand-attributes">
                    <x:param select="$myv:location" />
                    <x:param />
                </x:call>
                <x:expect label="same" select="$myv:location" />
            </x:scenario>
        </x:scenario>
    </x:scenario>

    <x:scenario label="x:schematron-location-compare">

        <x:scenario label="match exact">
            <x:call function="x:schematron-location-compare">
                <x:param name="expect-location">/article[1]/section[2]</x:param>
                <x:param name="svrl-location">/article[1]/section[2]</x:param>
                <x:param name="namespaces" as="empty-sequence()"/>
            </x:call>
            <x:expect label="true" select="true()"/>
        </x:scenario>

        <x:scenario label="match ignoring [1]">
            <x:call function="x:schematron-location-compare">
                <x:param name="expect-location">/article/section[2]</x:param>
                <x:param name="svrl-location">/article[1]/section[2]</x:param>
                <x:param name="namespaces" as="empty-sequence()"/>
            </x:call>
            <x:expect label="true" select="true()"/>
        </x:scenario>

        <x:scenario label="match ignoring leading /">
            <x:call function="x:schematron-location-compare">
                <x:param name="expect-location">article[1]/section[2]</x:param>
                <x:param name="svrl-location">/article[1]/section[2]</x:param>
                <x:param name="namespaces" as="empty-sequence()"/>
            </x:call>
            <x:expect label="true" select="true()"/>
        </x:scenario>

        <x:scenario label="match with namespaces xpath1">
            <x:call function="x:schematron-location-compare">
                <x:param name="expect-location">/root/ex1:sec[2]/ex2:para[2]</x:param>
                <x:param name="svrl-location">/root/*[local-name()='sec'][2]/*[local-name()='para'][2]</x:param>
                <x:param name="namespaces">
                    <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns1" prefix="ex1"/>
                    <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns2" prefix="ex2"/>
                </x:param>
            </x:call>
            <x:expect label="true" select="true()"/>
        </x:scenario>

        <x:scenario label="match with namespaces xpath2">
            <x:call function="x:schematron-location-compare">
                <x:param name="expect-location">/root/ex1:sec[2]/ex2:para[2]</x:param>
                <x:param name="svrl-location">/root[1]/*:sec[namespace-uri()='http://example.com/ns1'][2]/*:para[namespace-uri()='http://example.com/ns2'][2]</x:param>
                <x:param name="namespaces">
                    <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns1" prefix="ex1"/>
                    <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns2" prefix="ex2"/>
                </x:param>
            </x:call>
            <x:expect label="true" select="true()"/>
        </x:scenario>

        <x:scenario label="match with attribute (note: outside of oXygen, Schematron does not appear to fire on rules that have an attribute node as context)">
            <x:scenario label="not in namespace">
                <x:call function="x:schematron-location-compare">
                    <x:param name="expect-location">/article/section[1]/@type</x:param>
                    <x:param name="svrl-location">/article[1]/section[1]/@type</x:param>
                    <x:param name="namespaces" as="empty-sequence()"/>
                </x:call>
                <x:expect label="true" select="true()"/>
            </x:scenario>

            <x:scenario label="in namespace">
                <x:call function="x:schematron-location-compare">
                    <x:param name="expect-location">/ex1:article[1]/ex1:sec[2]/@ex2:type</x:param>
                    <x:param name="svrl-location">/*:article[namespace-uri()='http://example.com/ns1'][1]/*:sec[namespace-uri()='http://example.com/ns1'][2]/@*[namespace-uri()='http://example.com/ns2' and local-name()='type']</x:param>
                    <x:param name="namespaces">
                        <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns1" prefix="ex1"/>
                        <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns2" prefix="ex2"/>
                    </x:param>
                </x:call>
                <x:expect label="true" select="true()"/>
            </x:scenario>
        </x:scenario>

        <x:scenario label="not match">
            <x:call function="x:schematron-location-compare">
                <x:param name="expect-location">/root/body/div/para</x:param>
                <x:param name="svrl-location">/root[1]/div[1]/para[1]</x:param>
                <x:param name="namespaces" as="empty-sequence()"/>
            </x:call>
            <x:expect label="false" select="false()"/>
        </x:scenario>

        <x:scenario label="not match with namespaces xpath1">
            <x:call function="x:schematron-location-compare">
                <x:param name="expect-location">/root/ex1:sec[2]/ex2:para</x:param>
                <x:param name="svrl-location">/root/*[local-name()='sec'][2]</x:param>
                <x:param name="namespaces">
                    <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns1" prefix="ex1"/>
                    <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns2" prefix="ex2"/>
                </x:param>
            </x:call>
            <x:expect label="false" select="false()"/>
        </x:scenario>

        <x:scenario label="not match with namespaces xpath2">
            <x:call function="x:schematron-location-compare">
                <x:param name="expect-location">/root/ex1:sec[2]/ex1:sec[1]/ex2:para[2]</x:param>
                <x:param name="svrl-location">/root[1]/*:sec[namespace-uri()='http://example.com/ns1'][2]/*:para[namespace-uri()='http://example.com/ns2'][2]</x:param>
                <x:param name="namespaces">
                    <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns1" prefix="ex1"/>
                    <svrl:ns-prefix-in-attribute-values uri="http://example.com/ns2" prefix="ex2"/>
                </x:param>
            </x:call>
            <x:expect label="false" select="false()"/>
        </x:scenario>

    </x:scenario>

</x:description>
