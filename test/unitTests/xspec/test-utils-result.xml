<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="file:/home/dragos/Oxygen%20XML%20Editor%2022/frameworks/xspec/src/reporter/format-xspec-report.xsl"?>
<x:report xmlns:test="http://www.jenitennison.com/xslt/unit-test"
          xmlns:xs="http://www.w3.org/2001/XMLSchema"
          xmlns:x="http://www.jenitennison.com/xslt/xspec"
          xmlns:fn="http://www.w3.org/2005/xpath-functions"
          xmlns:f="http://https://github.com/costezki/model2owl#"
          stylesheet="file:/home/dragos/src/model2owl/src/common/utils.xsl"
          date="2020-04-05T10:51:39.607269+01:00"
          xspec="file:/home/dragos/src/model2owl/test/unitTests/test-utils.xspec">
   <x:scenario>
      <x:label>Scenario 1 for testing function getXsdRdfDataTypeValues</x:label>
      <x:call function="f:getXsdRdfDataTypeValues">
         <x:param name="qname">xsd:gYearMonth</x:param>
         <x:param name="dataTypesDefinitions"
                  href="file:/home/dragos/src/model2owl/test/testData/xsdAndRdfDataTypes.xml"
                  select="/"/>
      </x:call>
      <x:result select="'xsd:gYearMonth'"/>
      <x:test successful="true">
         <x:label>data-type</x:label>
         <x:expect select="'xsd:gYearMonth'"/>
      </x:test>
   </x:scenario>
   <x:scenario>
      <x:label>Scenario 2 for testing function getXsdRdfDataTypeValues</x:label>
      <x:call function="f:getXsdRdfDataTypeValues">
         <x:param name="qname">xsd:!#4354gYearMonth</x:param>
         <x:param name="dataTypesDefinitions"
                  href="file:/home/dragos/src/model2owl/test/testData/xsdAndRdfDataTypes.xml"
                  select="/"/>
      </x:call>
      <x:result select="''"/>
      <x:test successful="true">
         <x:label>nothing</x:label>
         <x:expect select="''"/>
      </x:test>
   </x:scenario>
   <x:scenario>
      <x:label>Scenario 1 for testing function getNamespaceValues </x:label>
      <x:call function="f:getNamespaceValues">
         <x:param name="prefix">ccev</x:param>
         <x:param name="namespaceDefinitions"
                  href="file:/home/dragos/src/model2owl/test/testData/namespaces.xml"
                  select="/"/>
      </x:call>
      <x:result select="'http://data.europa.eu/m8g/'"/>
      <x:test successful="true">
         <x:label>ccev base name</x:label>
         <x:expect select="'http://data.europa.eu/m8g/'"/>
      </x:test>
   </x:scenario>
   <x:scenario>
      <x:label>Scenario 2 for testing function getNamespaceValues </x:label>
      <x:call function="f:getNamespaceValues">
         <x:param name="prefix">ccevrts</x:param>
         <x:param name="namespaceDefinitions"
                  href="file:/home/dragos/src/model2owl/test/testData/namespaces.xml"
                  select="/"/>
      </x:call>
      <x:result select="''"/>
      <x:test successful="true">
         <x:label>return nothing</x:label>
         <x:expect select="''"/>
      </x:test>
   </x:scenario>
   <x:scenario>
      <x:label>Scenario 1 for testing function getUmlDataTypeValues</x:label>
      <x:call function="f:getUmlDataTypeValues">
         <x:param name="qname">Date</x:param>
         <x:param name="umlDataTypeMappings"
                  href="file:/home/dragos/src/model2owl/test/testData/umlToXsdDataTypes.xml"
                  select="/"/>
      </x:call>
      <x:result select="'xsd:date'"/>
      <x:test successful="true">
         <x:label>data-type</x:label>
         <x:expect select="'xsd:date'"/>
      </x:test>
   </x:scenario>
   <x:scenario>
      <x:label>Scenario 2 for testing function getUmlDataTypeValues</x:label>
      <x:call function="f:getUmlDataTypeValues">
         <x:param name="qname">DateQ</x:param>
         <x:param name="umlDataTypeMappings"
                  href="file:/home/dragos/src/model2owl/test/testData/umlToXsdDataTypes.xml"
                  select="/"/>
      </x:call>
      <x:result select="''"/>
      <x:test successful="true">
         <x:label>nothing</x:label>
         <x:expect select="''"/>
      </x:test>
   </x:scenario>
   <x:scenario>
      <x:label>Scenario 1 for testing function buildQNameFromLexicalQName</x:label>
      <x:call function="f:buildQNameFromLexicalQName">
         <x:param name="lexicalQName">xsd:integer</x:param>
      </x:call>
      <x:result select="QName('http://www.w3.org/2001/XMLSchema#', 'xsd:integer')"/>
      <x:test successful="true">
         <x:label>nothing</x:label>
         <x:expect select="QName('http://www.w3.org/2001/XMLSchema#', 'xsd:integer')"/>
      </x:test>
   </x:scenario>
   <x:scenario>
      <x:label>Scenario 2 for testing function buildQNameFromLexicalQName</x:label>
      <x:call function="f:buildQNameFromLexicalQName">
         <x:param name="lexicalQName">xsd1:integer</x:param>
      </x:call>
