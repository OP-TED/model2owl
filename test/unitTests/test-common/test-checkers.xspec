<?xml version="1.0" encoding="UTF-8"?>
<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec"
    xmlns:f="http://https://github.com/costezki/model2owl#"
    xmlns:uml="http://www.omg.org/spec/UML/20131001"
    xmlns:xmi="http://www.omg.org/spec/XMI/20131001"
    xmlns:umldi="http://www.omg.org/spec/UML/20131001/UMLDI"
    xmlns:dc="http://www.omg.org/spec/UML/20131001/UMLDC" xmlns:owl="http://www.w3.org/2002/07/owl#"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:dct="http://purl.org/dc/terms/"
    xmlns:skos="http://www.w3.org/2004/02/skos/core#"
    stylesheet="file:../../../src/common/checkers.xsl">
    
    <x:scenario label="Check valid normalized string">
        <x:call function="f:isValidNormalizedString">
            <x:param name="input">normalized:String</x:param>
        </x:call>
        <x:expect label="is valid" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check invalid normalized string">
        <x:call function="f:isValidNormalizedString">
            <x:param name="input">Normalized Str!ng</x:param>
        </x:call>
        <x:expect label="is invalid" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check valid Qname string">
        <x:call function="f:isValidQname">
            <x:param name="input">normalized:String</x:param>
        </x:call>
        <x:expect label="is valid" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check invalid Qname string">
        <x:call function="f:isValidQname">
            <x:param name="input">normalizedString</x:param>
        </x:call>
        <x:expect label="is valid" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check if local name from Qname is camelCase with first letter uppercased">
        <x:call function="f:isQNameUpperCasedCamelCase">
            <x:param name="input">prefix:Local</x:param>
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Local name from Qname is not camelCase with first letter uppercased">
        <x:call function="f:isQNameUpperCasedCamelCase">
            <x:param name="input">prefix:localName</x:param>
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check if local name from Qname is camelCase with first letter lowercased">
        <x:call function="f:isQNameLowerCasedCamelCase">
            <x:param name="input">prefix:localName</x:param>
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Local name from Qname is not camelCase with first letter uppercased">
        <x:call function="f:isQNameLowerCasedCamelCase">
            <x:param name="input">prefix:LocalName</x:param>
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check if Qname prefix is a valid namespace">
        <x:call function="f:isValidNamespace">
            <x:param name="input">ccev:localName</x:param>
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check Qname prefix with a invalid namespace">
        <x:call function="f:isValidNamespace">
            <x:param name="input">prefix1:localNamea</x:param>
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    
    <x:scenario label="Check if a data-type is valid ">
        <x:call function="f:isValidDataType">
            <x:param name="input">xsd:string</x:param>
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check if a data-type is valid when passing a UML data-type ">
        <x:call function="f:isValidDataType">
            <x:param name="input">String</x:param>
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check a invalid data-type">
        <x:call function="f:isValidDataType">
            <x:param name="input">prefix:localName</x:param>
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    
    <x:scenario label="Check if a isAttributeTypeValidForObjectProperty is valid ">
        <x:call function="f:isAttributeTypeValidForObjectProperty">
            <x:param name="attributeElement"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[37]/attributes[1]/attribute[1]"
            />
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario
        label="Check if a isAttributeTypeValidForObjectProperty is valid when passing a UML data-type ">
        <x:call function="f:isAttributeTypeValidForObjectProperty">
            <x:param name="attributeElement"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[76]/attributes[1]/attribute[4]"
            />
        </x:call>
        <x:expect label="boolean-true" select="false()"/>
    </x:scenario>
    
    
    <x:scenario label="Check a invalid isAttributeTypeValidForObjectProperty">
        <x:call function="f:isAttributeTypeValidForObjectProperty">
            <x:param name="attributeElement"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[220]/attributes[1]/attribute[4]"
            />
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check if a data-type is valid - isAttributeTypeValidForDatatypeProperty ">
        <x:call function="f:isAttributeTypeValidForDatatypeProperty">
            <x:param name="attributeElement"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[283]/attributes[1]/attribute[1]"
            />
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario
        label="Check if a data-type is valid when passing a UML data-type - isAttributeTypeValidForDatatypeProperty">
        <x:call function="f:isAttributeTypeValidForDatatypeProperty">
            <x:param name="attributeElement"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[35]/attributes[1]/attribute[8]"
            />
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check a invalid data-type - isAttributeTypeValidForDatatypeProperty">
        <x:call function="f:isAttributeTypeValidForDatatypeProperty">
            <x:param name="attributeElement"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[35]/attributes[1]/attribute[9]"
            />
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    <!--    -->
    <x:scenario label="Check isAttributeStereotypeValid - invalid stereotype">
        <x:call function="f:isAttributeStereotypeValid">
            <x:param name="element"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[37]/attributes[1]/attribute[9]"
            />
        </x:call>
        <x:expect label="result" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check isAttributeStereotypeValid - valid stereotype">
        <x:call function="f:isAttributeStereotypeValid">
            <x:param name="element"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[35]/attributes[1]/attribute[3]"
            />
        </x:call>
        <x:expect label="result" select="true()"/>
    </x:scenario>
    
    
</x:description>

