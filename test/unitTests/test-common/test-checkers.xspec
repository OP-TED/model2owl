<?xml version="1.0" encoding="UTF-8"?>
<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec"
    xmlns:f="http://https://github.com/costezki/model2owl#"
    xmlns:uml="http://www.omg.org/spec/UML/20131001"
    xmlns:xmi="http://www.omg.org/spec/XMI/20131001"
    xmlns:umldi="http://www.omg.org/spec/UML/20131001/UMLDI"    
    stylesheet="../../../src/common/checkers.xsl">
    
    <x:scenario label="Check valid normalized string">
        <x:call function="f:isValidNormalizedString">
            <x:param name="input">normalized:String</x:param>
        </x:call>
        <x:expect label="is valid" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check invalid normalized string">
        <x:call function="f:isValidNormalizedString">
            <x:param name="input">Normalized Str!ng</x:param>
        </x:call>
        <x:expect label="is invalid" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check valid Qname string">
        <x:call function="f:isValidQname">
            <x:param name="input">normalized:String</x:param>
        </x:call>
        <x:expect label="is valid" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check invalid Qname string">
        <x:call function="f:isValidQname">
            <x:param name="input">normalizedString</x:param>
        </x:call>
        <x:expect label="is valid" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check if local name from Qname is camelCase with first letter uppercased">
        <x:call function="f:isQNameUpperCasedCamelCase">
            <x:param name="input">prefix:Local</x:param>
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Local name from Qname is not camelCase with first letter uppercased">
        <x:call function="f:isQNameUpperCasedCamelCase">
            <x:param name="input">prefix:localName</x:param>
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check if local name from Qname is camelCase with first letter lowercased">
        <x:call function="f:isQNameLowerCasedCamelCase">
            <x:param name="input">prefix:localName</x:param>
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Local name from Qname is not camelCase with first letter uppercased">
        <x:call function="f:isQNameLowerCasedCamelCase">
            <x:param name="input">prefix:LocalName</x:param>
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check if Qname prefix is a valid namespace">
        <x:call function="f:isValidNamespace">
            <x:param name="input">cccev:localName</x:param>
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check Qname prefix with a invalid namespace">
        <x:call function="f:isValidNamespace">
            <x:param name="input">prefix1:localNamea</x:param>
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check Qname prefix with a invalid namespace">
        <x:call function="f:isValidNamespace">
            <x:param name="input">localName</x:param>
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check Qname prefix with a invalid namespace">
        <x:call function="f:isValidNamespace">
            <x:param name="input">:localName</x:param>
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check if a data-type is valid ">
        <x:call function="f:isValidDataType">
            <x:param name="input">xsd:string</x:param>
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    
    <x:scenario label="Check an invalid data-type">
        <x:call function="f:isValidDataType">
            <x:param name="input">prefix:localName</x:param>
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    
    <x:scenario label="Check if a isAttributeTypeValidForObjectProperty is valid ">
        <x:call function="f:isAttributeTypeValidForObjectProperty">
            <x:param name="attributeElement"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[37]/attributes[1]/attribute[1]"
            />
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    
    <x:scenario label="Check a invalid isAttributeTypeValidForObjectProperty">
        <x:call function="f:isAttributeTypeValidForObjectProperty">
            <x:param name="attributeElement"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[220]/attributes[1]/attribute[4]"
            />
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check if a data-type is valid - isAttributeTypeValidForDatatypeProperty ">
        <x:call function="f:isAttributeTypeValidForDatatypeProperty">
            <x:param name="attributeElement"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[283]/attributes[1]/attribute[1]"
            />
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario
        label="Check if a data-type is valid when passing a UML data-type - isAttributeTypeValidForDatatypeProperty">
        <x:call function="f:isAttributeTypeValidForDatatypeProperty">
            <x:param name="attributeElement"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[37]/attributes[1]/attribute[3]"
            />
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check a invalid data-type - isAttributeTypeValidForDatatypeProperty">
        <x:call function="f:isAttributeTypeValidForDatatypeProperty">
            <x:param name="attributeElement"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[35]/attributes[1]/attribute[9]"
            />
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    

    <x:scenario label="Check isAttributeStereotypeValid - invalid stereotype">
        <x:call function="f:isAttributeStereotypeValid">
            <x:param name="element"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[37]/attributes[1]/attribute[9]"
            />
        </x:call>
        <x:expect label="result" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check isAttributeStereotypeValid - not stereotype">
        <x:call function="f:isAttributeStereotypeValid">
            <x:param name="element"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[35]/attributes[1]/attribute[3]"
            />
        </x:call>
        <x:expect label="result" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check isElementStereotypeValid - valid stereotype 1">
        <x:call function="f:isElementStereotypeValid">
            <x:param name="element"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[155]"                
            />
        </x:call>
        <x:expect label="result" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check isElementStereotypeValid - valid stereotype 2">
        <x:call function="f:isElementStereotypeValid">
            <x:param name="element"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[163]"                
            />
        </x:call>
        <x:expect label="result" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check isElementStereotypeValid - valid stereotype 2">
        <x:call function="f:isElementStereotypeValid">
            <x:param name="element"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[36]"                
            />
        </x:call>
        <x:expect label="result" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check isElementStereotypeValid - invalid stereotype 1">
        <x:call function="f:isElementStereotypeValid">
            <x:param name="element"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[103]"                
            />
        </x:call>
        <x:expect label="result" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check isConnectorStereotypeValid - invalid stereotype">
        <x:call function="f:isConnectorStereotypeValid">
            <x:param name="element"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/connectors[1]/connector[5]"
            />
        </x:call>
        <x:expect label="result" select="false()"/>
    </x:scenario>
    
    
    
    <x:scenario label="Check isConnectorStereotypeValid - valid stereotype">
        <x:call function="f:isConnectorStereotypeValid">
            <x:param name="element"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/connectors[1]/connector[27]"
            />
        </x:call>
        <x:expect label="result" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check isConnectorStereotypeValid - valid stereotype">
        <x:call function="f:isConnectorStereotypeValid">
            <x:param name="element"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/connectors[1]/connector[453]"
            />
        </x:call>
        <x:expect label="result" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check isConnectorStereotypeValid - invalid stereotype">
        <x:call function="f:isConnectorStereotypeValid">
            <x:param name="element"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/connectors[1]/connector[41]"
            />
        </x:call>
        <x:expect label="result" select="false()"/>
    </x:scenario>

    
    <x:scenario label="Check  hasAttributeCorrespondingDependecy- no corresponding Dependency found ">
        <x:call function="f:hasAttributeCorrespondingDependecy">
            <x:param name="attribute"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[38]/attributes[1]/attribute[3]"
            />
        </x:call>
        <x:expect label="result" select="false()"/>
    </x:scenario>

    <x:scenario label="Check  hasAttributeCorrespondingDependecy- attribute name = dependency target role name with 'has' prefix">
        <x:call function="f:hasAttributeCorrespondingDependecy">
            <x:param name="attribute"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[38]/attributes[1]/attribute[4]"
            />
        </x:call>
        <x:expect label="result" select="true()"/>
    </x:scenario>

    <x:scenario label="Check hasAttributeCorrespondingDependecy- attribute name = dependency target role name">
        <x:call function="f:hasAttributeCorrespondingDependecy">
            <x:param name="attribute"
                href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[38]/attributes[1]/attribute[2]"
            />
        </x:call>
        <x:expect label="result" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check an element that is missing the name - no name value">
        <x:call function="f:isElementNameMissing">
            <x:param name="element" href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[317]"/>
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check an element that is missing the name - no name attribute">
        <x:call function="f:isElementNameMissing">
            <x:param name="element" href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[318]"/>
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check an element that is not missing the name">
        <x:call function="f:isElementNameMissing">
            <x:param name="element" href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi"
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[316]"/>
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check an element that has the name prefix missing">
        <x:call function="f:isElementNamePrefixMissing">
            <x:param name="element" href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi" 
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[316]"/>
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check an element that is has the name prefix missing - has delimiter but it is empty">
        <x:call function="f:isElementNamePrefixMissing">
            <x:param name="element" href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi" 
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[99]"/>
        </x:call>
        <x:expect label="boolean-true" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check an element that has the name prefix">
        <x:call function="f:isElementNamePrefixMissing">
            <x:param name="element" href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi" 
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[319]"/>
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check an element that has local segment">
        <x:call function="f:isElementNameLocalSegmentMissing">
            <x:param name="element" href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi" 
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[319]"/>
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check an element that has local segment - it is not a Qname">
        <x:call function="f:isElementNameLocalSegmentMissing">
            <x:param name="element" href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi" 
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[36]"/>
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    
    <x:scenario label="Check an element that has no local segment">
        <x:call function="f:isElementNameLocalSegmentMissing">
            <x:param name="element" href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi" 
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[73]"/>
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check an element with valid prefix">
        <x:call function="f:isInvalidElementNamePrefix">
            <x:param name="element" href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi" 
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[156]"/>
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check an element with invalid prefix">
        <x:call function="f:isInvalidElementNamePrefix">
            <x:param name="element" href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi" 
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[73]"/>
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check an element with valid local segment - not Qname">
        <x:call function="f:isInvalidElementLocalSegmentName">
            <x:param name="element" href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi" 
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[36]"/>
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check an element with valid local segment">
        <x:call function="f:isInvalidElementLocalSegmentName">
            <x:param name="element" href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi" 
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[319]"/>
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check an element with invalid local segment">
        <x:call function="f:isInvalidElementLocalSegmentName">
            <x:param name="element" href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi" 
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[95]"/>
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check the local segment first character for an element which is valid">
        <x:call function="f:isValidElementFirstCharacterInLocalSegment">
            <x:param name="element" href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi" 
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[319]"/>
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check the local segment first character for an element which is invalid">
        <x:call function="f:isValidElementFirstCharacterInLocalSegment">
            <x:param name="element" href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi" 
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[36]"/>
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check an element that has the local segment with delimiters">
        <x:call function="f:isDelimitersInElementLocalSegment">
            <x:param name="element" href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi" 
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[101]"/>
        </x:call>
        <x:expect label="boolean-true" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check an element that has the local segment with no delimiters">
        <x:call function="f:isDelimitersInElementLocalSegment">
            <x:param name="element" href="../../testData/ePO-CM-v2.0.1-2020-03-27_test.eap.xmi" 
                select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[319]"/>
        </x:call>
        <x:expect label="boolean-false" select="false()"/>
    </x:scenario>
    
    <x:scenario label="Check if all namespaces are defined - All used namespaces are defined">
        <x:call function="f:isAllNamespacesDefined">
            <x:param name="listOfNamespaces" select="('epo', 'xsd')"/>
        </x:call>
        <x:expect label="all namespaces were defined" select="true()"/>
    </x:scenario>
    
    <x:scenario label="Check if all namespaces are defined - not all namespaces were defined">
        <x:call function="f:isAllNamespacesDefined">
            <x:param name="listOfNamespaces" select="('epo', 'xsd', 'twe', 'cancan')"/>
        </x:call>
        <x:expect label="a list with namespaces that were not defined" select="('twe', 'cancan')"/>
    </x:scenario>
    
    <x:scenario label="Tests for f:isValidTagName">
        <x:scenario label="valid tag with lang tag">
            <x:call function="f:isValidTagName">
                <x:param name="tagName" select="'skos:note@en'"/>
            </x:call>
            <x:expect label="valid tag name with lang tag" select="true()"/>
        </x:scenario>
        <x:scenario label="valid tag with datatype">
            <x:call function="f:isValidTagName">
                <x:param name="tagName" select="'skos:version^^xsd:integer'"/>
            </x:call>
            <x:expect label="valid with datatype" select="true()"/>
        </x:scenario>
        <x:scenario label="valid tag">
            <x:call function="f:isValidTagName">
                <x:param name="tagName" select="'skos:note'"/>
            </x:call>
            <x:expect label="valid tag name" select="true()"/>
        </x:scenario>
        <x:scenario label="valid tag with uri">
            <x:call function="f:isValidTagName">
                <x:param name="tagName" select="'skos:indentifier&lt;&gt;'"/>
            </x:call>
            <x:expect label="valid tag name with URI" select="true()"/>
        </x:scenario>
        
        <x:scenario label="invalid tag">
            <x:call function="f:isValidTagName">
                <x:param name="tagName" select="'indentifier'"/>
            </x:call>
            <x:expect label="invalid" select="false()"/>
        </x:scenario>
        <x:scenario label="invalid tag datatytpe">
            <x:call function="f:isValidTagName">
                <x:param name="tagName" select="'skos:version^^'"/>
            </x:call>
            <x:expect label="invalid" select="false()"/>
        </x:scenario>
    </x:scenario>
    
    <x:scenario label="testing f:hasEnumerationAConstraintLevelProperty">
        <x:scenario label="enumeration with no tags">
            <x:call function="f:hasEnumerationAConstraintLevelProperty">
                <x:param name="element" href="../../testData/ePO-core-4.2.0.xml" 
                    select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[259]"/>
            </x:call>
            <x:expect label="boolean-false" select="false()"/>
        </x:scenario>
        
        <x:scenario label="enumeration with tag but without constraint level property tag">
            <x:call function="f:hasEnumerationAConstraintLevelProperty">
                <x:param name="element" href="../../testData/ePO-core-4.2.0.xml" 
                    select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[268]"/>
            </x:call>
            <x:expect label="boolean-false" select="false()"/>
        </x:scenario>
        
        <x:scenario label="enumeration with correct tag and value">
            <x:call function="f:hasEnumerationAConstraintLevelProperty">
                <x:param name="element" href="../../testData/ePO-core-4.2.0.xml" 
                    select="/xmi:XMI/xmi:Extension[1]/elements[1]/element[245]"/>
            </x:call>
            <x:expect label="boolean-true" select="true()"/>
        </x:scenario>
    </x:scenario>
    
    <x:scenario label="testing f:generalisationConnectorsHasOppositeDirections"> 
        <x:scenario label="correct generalisation between associations">
            <x:call function="f:generalisationConnectorsHasOppositeDirections">
                <x:param name="element" href="../../testData/ePO-core-4.2.0-generalisations.xml" 
                    select="/xmi:XMI/xmi:Extension[1]/connectors[1]/connector[1]"/>
            </x:call>
            <x:expect label="boolean-false" select="false()"/>
        </x:scenario>
        
    </x:scenario>
    
    
    <x:scenario label="testing f:generalisationMissing"> 
        <x:scenario label="correct use of generalisations between associations - ">
            <x:call function="f:generalisationMissing">
                <x:param name="element" href="../../testData/ePO-core-4.2.0-generalisations.xml" 
                    select="/xmi:XMI/xmi:Extension[1]/connectors[1]/connector[3]"/>
            </x:call>
            <x:expect label="boolean-false" select="true()"/>
        </x:scenario>
        
        

    </x:scenario>
    
</x:description>

