<?xml version="1.0" encoding="UTF-8"?>
<x:description xmlns:x="http://www.jenitennison.com/xslt/xspec"
    xmlns:uml="http://www.omg.org/spec/UML/20131001"
    xmlns:xmi="http://www.omg.org/spec/XMI/20131001"
    xmlns:umldi="http://www.omg.org/spec/UML/20131001/UMLDI"
    xmlns:dc="http://purl.org/dc/elements/1.1/" 
    xmlns:owl="http://www.w3.org/2002/07/owl#"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#" xmlns:dct="http://purl.org/dc/terms/"
    xmlns:skos="http://www.w3.org/2004/02/skos/core#"
    stylesheet="../../../src/owl-core-lib/descriptors-owl-core.xsl">



    <x:scenario
        label="Scenario for testing generation of label">

        <x:call template="coreLayerName">
            <x:param name="elementName">epo:DynamicProcedure</x:param>
            <x:param name="elementUri" select="'http:/fake.uri#something'"/>
            </x:call>
            <x:expect label="there is rdf:Description"
                test="boolean(/rdf:Description[@rdf:about='http:/fake.uri#something'])"
            />
        <x:expect label="correct label" test="rdf:Description/skos:prefLabel/text() = 'Dynamic Procedure'"/>
            
        
    </x:scenario>
    
    <x:scenario
        label="Scenario for testing generation of description">
        
        <x:call template="coreLayerDescription">
            <x:param name="definition">This is a description</x:param>
            <x:param name="elementUri" select="'http:/fake.uri#something'"/>
        </x:call>
        <x:expect label="there is rdf:Description"
            test="boolean(/rdf:Description[@rdf:about='http:/fake.uri#something'])"
        />
        <x:expect label="correct description" test="rdf:Description/skos:definition /text() = 'This is a description'"/>
        
        
    </x:scenario>
    
    <x:scenario
        label="Scenario for testing generation of definedBy">
        
        <x:call template="coreDefinedBy">
            <x:param name="elementUri" select="'http://data.europa.eu/a4g/ontology#Lot'"/>
        </x:call>

        <x:expect label="there is rdf:Description"
            test="boolean(/rdf:Description[@rdf:about='http://data.europa.eu/a4g/ontology#Lot'])"
        />
        <x:expect label="there is rdfs:isDefinedBy"
            test="boolean(/rdf:Description[@rdf:about='http://data.europa.eu/a4g/ontology#Lot']/rdfs:isDefinedBy)"
        />

        
        
    </x:scenario>
    
    
    <x:scenario
        label="Scenario for testing generation of tags - with lang tag ">
        
        <x:call template="coreLayerTags">
            <x:param name="tagName" select="'skos:altLabel@ro'"/>
            <x:param name="tagValue" select="'Orice agent, chiar si Garcea. '"/>
            <x:param name="elementUri" select="'http://base.onto.uri/ClassName'"/>
        </x:call>
        <x:expect label="there is rdf:Description"
            test="boolean(/rdf:Description[@rdf:about='http://base.onto.uri/ClassName'])"
        />
        <x:expect label="have lang tag" test="rdf:Description/skos:altLabel/@xml:lang = 'ro'"/>
        <x:expect label="correct skos:altLabel text" test="rdf:Description/skos:altLabel/text() = 'Orice agent, chiar si Garcea. '"/>
    </x:scenario>
    
    <x:scenario
        label="Scenario for testing generation of tags - without lang tag ">
        
        <x:call template="coreLayerTags">
            <x:param name="tagName" select="'skos:note'"/>
            <x:param name="tagValue" select="'Something else'"/>
            <x:param name="elementUri" select="'http://base.onto.uri/ClassName'"/>
        </x:call>
        <x:expect label="there is rdf:Description"
            test="boolean(/rdf:Description[@rdf:about='http://base.onto.uri/ClassName'])"
        />
        <x:expect label="have lang tag" test="rdf:Description/skos:note/@xml:lang = 'en'"/>
        <x:expect label="correct skos:note text" test="rdf:Description/skos:note/text() = 'Something else'"/>
    </x:scenario>
    
    
    <x:scenario
        xmlns:skos="http://www.w3.org/2004/02/skos/core#"
        xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
        label="Scenario for testing generation of tags - with datatypes - string ">
        
        <x:call template="coreLayerTags">
            <x:param name="tagName" select="'skos:historyNote^^xsd:string'"/>
            <x:param name="tagValue" select="'Something related with history'"/>
            <x:param name="elementUri" select="'http://base.onto.uri/ClassName'"/>
        </x:call>
        <x:expect label="there is rdf:Description"
            test="boolean(/rdf:Description[@rdf:about='http://base.onto.uri/ClassName'])"
        />
        <x:expect label="correct skos:historyNote text"
            test="/rdf:Description/skos:historyNote/text() = 'Something related with history'" />
    </x:scenario>
    


    <x:scenario
        label="Scenario for testing generation of tags - with URI ">
        
        <x:call template="coreLayerTags">
            <x:param name="tagName" select="'skos:indentifier&lt;&gt;'"/>
            <x:param name="tagValue" select="'http://base.onto.uri/URI'"/>
            <x:param name="elementUri" select="'http://base.onto.uri/ClassName'"/>
        </x:call>
        <x:expect label="there is rdf:Description"
            test="boolean(/rdf:Description[@rdf:about='http://base.onto.uri/ClassName'])"
        />
        <x:expect label="correct skos:indentifier/@rdf:resource text" test="rdf:Description/skos:indentifier/@rdf:resource = 'http://base.onto.uri/URI'"/>
    </x:scenario>
    
    
    <x:scenario
        label="Scenario for testing generation of comments">
        
        <x:call template="coreLayerComment">
            <x:param name="comment" select="'This is a comment'"/>
            <x:param name="elementUri" select="'http://base.onto.uri/ClassName'"/>
        </x:call>
        <x:expect label="there is rdf:Description"
            test="boolean(/rdf:Description[@rdf:about='http://base.onto.uri/ClassName'])"
        />
        <x:expect label="correct skos:editorialNote text" test="rdf:Description/skos:editorialNote/text() = 'This is a comment'"/>
    </x:scenario>
    
</x:description>
